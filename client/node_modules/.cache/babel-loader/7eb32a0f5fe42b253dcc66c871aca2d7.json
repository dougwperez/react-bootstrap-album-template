{"ast":null,"code":"import _classCallCheck from \"/Users/douglasperez/PostHR Personal Projects/react-bootstrap-album-template/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/douglasperez/PostHR Personal Projects/react-bootstrap-album-template/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/douglasperez/PostHR Personal Projects/react-bootstrap-album-template/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/douglasperez/PostHR Personal Projects/react-bootstrap-album-template/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/douglasperez/PostHR Personal Projects/react-bootstrap-album-template/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/douglasperez/PostHR Personal Projects/react-bootstrap-album-template/client/src/components/IframePic.jsx\";\nimport React from 'react';\n\nvar IframePic =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IframePic, _React$Component);\n\n  function IframePic(props) {\n    var _this;\n\n    _classCallCheck(this, IframePic);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IframePic).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(IframePic, [{\n    key: \"render\",\n    value: function render() {\n      console.log('this.props.link', this.props.link); // let codePenFrame = this.props.link.replace('/pen/', '/full/');\n      // console.log('codePenFrame', codePenFrame);\n\n      if (this.props.name === 'codepen.io') {\n        var codePenFrame = this.props.link.replace('/pen/', '/full/');\n        return React.createElement(\"iframe\", {\n          src: codePenFrame,\n          title: \"codepen iframe\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.name === 'codesandbox.io') {\n        var split = this.props.link.split('/s/');\n        var identifier = split[1];\n        var codeSandboxFrame = \"https://codesandbox.io/embed/\".concat(identifier, \"?fontsize=14&hidenavigation=1&theme=dark&view=preview\");\n        console.log('identifier', identifier);\n        return React.createElement(\"iframe\", {\n          src: codeSandboxFrame,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.name === 'jsfiddle.net') {\n        // let split = this.props.link.split('/s/');\n        // let identifier = split[1];\n        // let codeSandboxFrame = `https://codesandbox.io/embed/${identifier}?fontsize=14&hidenavigation=1&theme=dark&view=preview`;\n        // console.log('identifier', identifier);\n        return React.createElement(\"iframe\", {\n          width: \"100%\",\n          height: \"300\",\n          src: \"//jsfiddle.net/Daniel_Hug/pvk6p/embedded/js,result/\",\n          allowfullscreen: \"allowfullscreen\",\n          allowpaymentrequest: true,\n          frameborder: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Not codepen\");\n      }\n    }\n  }]);\n\n  return IframePic;\n}(React.Component);\n\nexport { IframePic as default };\n{\n  /* <iframe\n  width=\"100%\"\n  height=\"300\"\n  src=\"//jsfiddle.net/Daniel_Hug/pvk6p/embedded/result/\"\n  allowfullscreen=\"allowfullscreen\"\n  allowpaymentrequest\n  frameborder=\"0\"\n  />; */\n}","map":{"version":3,"sources":["/Users/douglasperez/PostHR Personal Projects/react-bootstrap-album-template/client/src/components/IframePic.jsx"],"names":["React","IframePic","props","state","console","log","link","name","codePenFrame","replace","split","identifier","codeSandboxFrame","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEqBC,S;;;;;AACjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFe;AAGlB;;;;6BAEQ;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKH,KAAL,CAAWI,IAA1C,EADK,CAEL;AACA;;AACA,UAAI,KAAKJ,KAAL,CAAWK,IAAX,KAAoB,YAAxB,EAAsC;AAClC,YAAIC,YAAY,GAAG,KAAKN,KAAL,CAAWI,IAAX,CAAgBG,OAAhB,CAAwB,OAAxB,EAAiC,QAAjC,CAAnB;AACA,eAAO;AAAQ,UAAA,GAAG,EAAED,YAAb;AAA2B,UAAA,KAAK,EAAC,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,UAAI,KAAKN,KAAL,CAAWK,IAAX,KAAoB,gBAAxB,EAA0C;AACtC,YAAIG,KAAK,GAAG,KAAKR,KAAL,CAAWI,IAAX,CAAgBI,KAAhB,CAAsB,KAAtB,CAAZ;AACA,YAAIC,UAAU,GAAGD,KAAK,CAAC,CAAD,CAAtB;AACA,YAAIE,gBAAgB,0CAAmCD,UAAnC,0DAApB;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BM,UAA1B;AACA,eAAO;AAAQ,UAAA,GAAG,EAAEC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,UAAI,KAAKV,KAAL,CAAWK,IAAX,KAAoB,cAAxB,EAAwC;AACpC;AACA;AACA;AACA;AACA,eACI;AACI,UAAA,KAAK,EAAC,MADV;AAEI,UAAA,MAAM,EAAC,KAFX;AAGI,UAAA,GAAG,EAAC,qDAHR;AAII,UAAA,eAAe,EAAC,iBAJpB;AAKI,UAAA,mBAAmB,MALvB;AAMI,UAAA,WAAW,EAAC,GANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,OAfD,MAeO;AACH,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACH;AACJ;;;;EAvCkCP,KAAK,CAACa,S;;SAAxBZ,S;AA0CrB;AACI;;;;;;;;AAQH","sourcesContent":["import React from 'react';\n\nexport default class IframePic extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        console.log('this.props.link', this.props.link);\n        // let codePenFrame = this.props.link.replace('/pen/', '/full/');\n        // console.log('codePenFrame', codePenFrame);\n        if (this.props.name === 'codepen.io') {\n            let codePenFrame = this.props.link.replace('/pen/', '/full/');\n            return <iframe src={codePenFrame} title=\"codepen iframe\" />;\n        }\n        if (this.props.name === 'codesandbox.io') {\n            let split = this.props.link.split('/s/');\n            let identifier = split[1];\n            let codeSandboxFrame = `https://codesandbox.io/embed/${identifier}?fontsize=14&hidenavigation=1&theme=dark&view=preview`;\n            console.log('identifier', identifier);\n            return <iframe src={codeSandboxFrame} />;\n        }\n        if (this.props.name === 'jsfiddle.net') {\n            // let split = this.props.link.split('/s/');\n            // let identifier = split[1];\n            // let codeSandboxFrame = `https://codesandbox.io/embed/${identifier}?fontsize=14&hidenavigation=1&theme=dark&view=preview`;\n            // console.log('identifier', identifier);\n            return (\n                <iframe\n                    width=\"100%\"\n                    height=\"300\"\n                    src=\"//jsfiddle.net/Daniel_Hug/pvk6p/embedded/js,result/\"\n                    allowfullscreen=\"allowfullscreen\"\n                    allowpaymentrequest\n                    frameborder=\"0\"\n                />\n            );\n        } else {\n            return <div>Not codepen</div>;\n        }\n    }\n}\n\n{\n    /* <iframe\n    width=\"100%\"\n    height=\"300\"\n    src=\"//jsfiddle.net/Daniel_Hug/pvk6p/embedded/result/\"\n    allowfullscreen=\"allowfullscreen\"\n    allowpaymentrequest\n    frameborder=\"0\"\n/>; */\n}\n"]},"metadata":{},"sourceType":"module"}